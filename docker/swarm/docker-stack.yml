version: "3.7"

volumes:
  mongodata: {}
  prometheus: {}
  grafana: {}

networks:
  net:
    driver: overlay

services:

  db:
    image: mongo:4.2.0-bionic
    networks:
      - fogbow
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    deploy:
      mode: global

  telemetry-aggregator:
    image: emanueljoivo/telemetry-aggregator:latest
    networks:
      - fogbow
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
    ports:
      - "8088:8088"    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088"]
      interval: 5s
      timeout: 1s
      retries: 5

  prometheus: 
    image: prom/prometheus
    networks:
      - net    
    volumes:
      - prometheus:/prometheus
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

  pushgateway:
    image: prom/pushgateway
    ports:
      - "9091:9091"
    networks:
      - net

  grafana:     
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - net
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager      
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

