version: "3.7"

services:

# Particular services #
  db:
    image: mongo:4.2.0-bionic
    networks:
      - fogbow
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    deploy:
      mode: global

  aggregator:
    image: emanueljoivo/telemetry-aggregator:v1.0.0
    env_file:
      - ./aggregator/config.env
    networks:
      - fogbow
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
    ports:
      - "8088:8088"

# Prometheus stack required #

  prometheus: 
    image: prom/prometheus
    networks:
      - fogbow    
    volumes:
      - prometheusdata:/prometheus
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

  pushgateway:
    image: prom/pushgateway
    ports:
      - "9091:9091"
    networks:
      - fogbow

  grafana:     
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - fogbow
    volumes:
      - grafanadata:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/etc/grafana/dashboards
    env_file:
      - ./grafana/config.monitoring
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager      
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  mongodata: {}
  prometheusdata: {}
  grafanadata: {}

# General config #
networks:
  fogbow:
    driver: overlay